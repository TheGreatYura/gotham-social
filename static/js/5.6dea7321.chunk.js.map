{"version":3,"sources":["components/DialogsPage/DialogsPage.module.css","components/DialogsPage/DialogItem/DialogItem.jsx","components/DialogsPage/Message/Message.jsx","components/DialogsPage/AddMessageForm/AddMessageForm.jsx","components/DialogsPage/Dialogs.jsx","components/withAuthRedirect/withAuthRedirect.js","components/DialogsPage/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","id","name","to","Message","message","reduxForm","form","handleSubmit","onSubmit","Field","component","TextareaField","placeholder","validate","required","Dialogs","sendMessage","dialogsPage","messagesData","dialogsItems","map","item","key","messagesItems","className","css","container","values","newMessageText","mapStateToProps","state","isAuth","auth","DialogsContainer","compose","connect","dispatch","Component","RedirectComponent","this","React"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,aAAe,kCAAkC,cAAgB,qC,sFCW/GC,EATI,SAACC,GAAW,IACrBC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,KACZ,OACE,kBAAC,IAAD,CAASC,GAAE,mBAAcF,IACvB,6BAAMC,KCGGE,EARC,SAACJ,GAAW,IAClBK,EAAYL,EAAZK,QAER,OACE,6BAAMA,I,kCCqBKC,cAAU,CACvBC,KAAM,kBADOD,EAtBQ,SAACN,GAAW,IACzBQ,EAAiBR,EAAjBQ,aAER,OACE,0BACEC,SAAUD,GAEV,6BACE,kBAACE,EAAA,EAAD,CACEC,UAAWC,IACXV,KAAK,iBACLW,YAAY,qBACZC,SAAU,CAACC,QAGf,6BACE,6CCeOC,EA9BC,SAAChB,GAAW,IAClBiB,EAA6BjB,EAA7BiB,YAAaC,EAAgBlB,EAAhBkB,YACbC,EAAiBD,EAAjBC,aAEFC,EAAeF,EAAYE,aAAaC,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAYpB,KAAMoB,EAAKpB,KAAMD,GAAIqB,EAAKrB,GAAIsB,IAAKD,EAAKrB,QAC1GuB,EAAgBL,EAAaE,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAASjB,QAASiB,EAAKjB,QAASkB,IAAKD,EAAKrB,QAM3F,OACE,yBAAKwB,UAAWC,IAAIC,WAClB,yBAAKF,UAAWC,IAAIN,cACjBA,GAGH,yBAAKK,UAAWC,IAAIF,eACjBA,GAGH,6BACE,kBAAC,EAAD,CAAgBf,SAfG,SAACmB,GACxBX,EAAYW,EAAOC,sB,iECVnBC,EAAkB,SAACC,GACrB,MAAO,CACLC,OAAQD,EAAME,KAAKD,S,OCejBE,EAAmBC,YACvBC,aAhBoB,SAACL,GAErB,MAAQ,CACNb,YAFsBa,EAAhBb,gBAMe,SAACmB,GACxB,MAAQ,CACNpB,YAAa,SAACY,GACZQ,EAASpB,YAAYY,UDNK,SAACS,GAAe,IACxCC,EADuC,iLAGzC,OAAIC,KAAKxC,MAAMgC,OAIR,kBAACM,EAAcE,KAAKxC,OAHlB,kBAAC,IAAD,CAAUG,GAAG,eAJmB,GACbsC,IAAMH,WAUtC,OAAOF,YAAQN,EAARM,CAAyBG,KCATJ,CAGvBnB,GAEakB","file":"static/js/5.6dea7321.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogsPage_container__2hOIV\",\"dialogsItems\":\"DialogsPage_dialogsItems__1ovaj\",\"messagesItems\":\"DialogsPage_messagesItems__1WBgl\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  const { id, name } = props;\r\n  return (\r\n    <NavLink to={`/dialogs/${id}`}>\r\n      <div>{name}</div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\n\r\nconst Message = (props) => {\r\n  const { message } = props;\r\n\r\n  return (\r\n    <div>{message}</div>\r\n  );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport { TextareaField } from '../../common/FormFields/FormFields';\r\nimport { required } from '../../../utils/validators/validators';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\nconst AddMessageForm = (props) => {\r\n  const { handleSubmit } = props;\r\n\r\n  return (\r\n    <form \r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div>\r\n        <Field \r\n          component={TextareaField} \r\n          name=\"newMessageText\" \r\n          placeholder=\"Enter your message\" \r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'addMessageForm'\r\n})(AddMessageForm);","import React from 'react';\r\nimport css from './DialogsPage.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n  const { sendMessage, dialogsPage } = props;\r\n  const { messagesData } = dialogsPage;\r\n\r\n  const dialogsItems = dialogsPage.dialogsItems.map((item) => <DialogItem name={item.name} id={item.id} key={item.id} />);\r\n  const messagesItems = messagesData.map((item) => <Message message={item.message} key={item.id} />);\r\n\r\n  const handleAddMessage = (values) => {\r\n    sendMessage(values.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <div className={css.dialogsItems}>\r\n        {dialogsItems}\r\n      </div>\r\n\r\n      <div className={css.messagesItems}>\r\n        {messagesItems}\r\n      </div>\r\n\r\n      <div>\r\n        <AddMessageForm onSubmit={handleAddMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};","import Dialogs from './Dialogs';\r\nimport { sendMessage } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../withAuthRedirect/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  const { dialogsPage } = state;\r\n  return ({\r\n    dialogsPage,\r\n  });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return ({\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(sendMessage(newMessageText));\r\n    },\r\n  });\r\n};\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;"],"sourceRoot":""}