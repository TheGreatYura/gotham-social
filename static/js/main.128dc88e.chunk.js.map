{"version":3,"sources":["redux/dialogs-reducer.js","utils/object-helpers.js","redux/users-reducer.js","components/Login/LoginForm.module.css","assets/images/Eclipse.svg","assets/images/logo.png","api/api.js","components/Navbar/Navbar.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","redux/auth-reducer.js","components/Login/LoginContainer.js","components/Content/Content.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","components/Header/Header.module.css","components/common/Preloader/Preloader.jsx","components/common/FormFields/FormFields.jsx","utils/validators/validators.js","components/common/FormFields/FormFields.module.css","redux/profile-reducer.js"],"names":["sendMessage","message","type","initialState","dialogsItems","id","name","messagesData","dialogsReducer","state","action","length","updateObjectInArray","items","itemId","objPropName","newObjProps","map","item","users","pageSize","totalCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","setFetching","toggleFollowingProgress","inProgress","requestUsers","pageNumber","dispatch","a","usersAPI","getUsers","data","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","followUser","bind","unfollow","unfollowUser","usersReducer","followed","filter","module","exports","service","Axios","create","withCredentials","headers","baseURL","page","get","then","response","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","getAuthUserData","login","email","password","remember","logout","Navbar","className","style","display","flexDirection","to","reduxForm","form","props","handleSubmit","error","onSubmit","Field","placeholder","component","InputField","validate","required","css","loginError","Login","isAuth","formData","rememberMe","SET_USER_DATA","setAuthUserData","payload","authReducer","mapDispatchToProps","stopSubmit","_error","messages","connect","auth","DialogsContainer","React","lazy","ProfilePageContainer","UsersPageContainer","withRouter","fallback","Preloader","path","render","LoginContainer","Header","header","logo","src","alt","logoImage","userMenu","onClick","loginLink","HeaderContainer","this","Component","mapDispatchToPropsObj","initialized","appReducer","App","initializeApp","compose","app","getUserData","Promise","all","Boolean","window","location","hostname","match","reducers","combineReducers","profilePage","profileReducer","dialogsPage","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","spinner","fieldControl","element","input","meta","restProps","hasError","touched","FieldElement","TextareaField","value","maxLengthCreator","maxLength","posts","text","likes","profile","newPostText","addPost","setUserProfile","setStatus","getUserProfile","postId"],"mappings":"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","file":"static/js/main.128dc88e.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nexport const sendMessage = (message) => ({\r\n  type: SEND_MESSAGE,\r\n  message\r\n});\r\n\r\nconst initialState = {\r\n  dialogsItems: [\r\n    {\r\n      id: 1,\r\n      name: 'Ira',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Dima',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Vasya',\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Sveta',\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'Pasha',\r\n    },\r\n  ],\r\n  messagesData: [\r\n    {\r\n      id: 1,\r\n      message: 'Hello. How are you?'\r\n    },\r\n    {\r\n      id: 2,\r\n      message: 'I\\'m fine, workin on big research!'\r\n    }\r\n  ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE:\r\n      return {\r\n        ...state,\r\n        messagesData: [\r\n          ...state.messagesData,\r\n          {\r\n            id: state.messagesData.length + 1,\r\n            message: action.message,\r\n          }\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map(item => {\r\n    if(item[objPropName] === itemId) {\r\n      return {...item, ...newObjProps};\r\n    }\r\n\r\n    return item;\r\n  });\r\n};","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n};\r\n\r\nexport const followSuccess = (userId) => ({\r\n  type: FOLLOW,\r\n  userId\r\n});\r\n\r\nexport const unfollowSuccess = (userId) => ({\r\n  type: UNFOLLOW,\r\n  userId\r\n});\r\n\r\nexport const setUsers = (users) => ({\r\n  type: SET_USERS,\r\n  users\r\n});\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage\r\n});\r\n\r\nexport const setTotalCount = (totalCount) => ({\r\n  type: SET_TOTAL_COUNT,\r\n  totalCount,\r\n});\r\n\r\nexport const setFetching = (isFetching) => ({\r\n  type: TOGGLE_FETCHING,\r\n  isFetching\r\n});\r\n\r\nexport const toggleFollowingProgress = (inProgress, userId) => ({\r\n  type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n  inProgress,\r\n  userId\r\n});\r\n\r\nexport const requestUsers = (pageNumber, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(setFetching(true));\r\n\r\n    const data = await usersAPI.getUsers(pageNumber, pageSize);\r\n\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalCount(data.totalCount));\r\n    dispatch(setFetching(false));\r\n    dispatch(setCurrentPage(pageNumber));\r\n  };\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n\r\n  const response = await apiMethod(userId);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  }\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.followUser.bind(usersAPI), followSuccess);\r\n  };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollowUser.bind(usersAPI), unfollowSuccess);\r\n  };\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FOLLOW:\r\n      return { \r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\r\n      };\r\n    case UNFOLLOW:\r\n      return { \r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\r\n      };\r\n    case SET_USERS:\r\n      return  {\r\n        ...state,\r\n        users: [...action.users]\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      };\r\n    case SET_TOTAL_COUNT: \r\n      return {\r\n        ...state,\r\n        totalCount: action.totalCount\r\n      };\r\n    case TOGGLE_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      };\r\n    case TOGGLE_FOLLOWING_IN_PROGRESS: \r\n      return {\r\n        ...state,\r\n        followingInProgress: action.inProgress \r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((userId) => userId !== action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginError\":\"LoginForm_loginError__1hSHv\"};","module.exports = __webpack_public_path__ + \"static/media/Eclipse.6e733990.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.02322427.png\";","import Axios from 'axios';\r\n\r\nlet service = Axios.create({\r\n  withCredentials: true,\r\n  headers: {\r\n    'API-KEY': 'd22e49fa-8e6f-4c97-9e63-0669e2d9d612'\r\n  },\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers: (page, pageSize) => {\r\n    return service.get(`users?page=${page}&count=${pageSize}`).then(response => response.data);\r\n  },\r\n  followUser: (userId) => {\r\n    return service.post(`follow/${userId}`);\r\n  },\r\n  unfollowUser: (userId) => {\r\n    return service.delete(`follow/${userId}`);\r\n  }\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile: (userId) => {\r\n    return service.get(`profile/${userId}`).then(response => response.data);\r\n  },\r\n  getStatus: (userId) => {\r\n    return service.get(`profile/status/${userId}`);\r\n  },\r\n  updateStatus: (status) => {\r\n    return service.put(`profile/status/`, { status });\r\n  }\r\n};\r\n\r\nexport const authAPI = {\r\n  getAuthUserData: () => {\r\n    return service.get(`auth/me`).then(response => response.data);\r\n  },\r\n  login: (email, password, remember=false) => {\r\n    return service.post(`auth/login`, { email, password, remember }).then((response) => response.data);\r\n  },\r\n  logout: () => {\r\n    return service.delete(`auth/login`).then((response) => response.data);\r\n  }\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <nav style={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}>\r\n        <Link to={`/profile`}>Profile</Link>\r\n        <Link to={`/dialogs`}>Messages</Link>\r\n        <Link to={`/users`}>Users</Link>\r\n        <Link to={`/news`}>News</Link>\r\n        <Link to={`/music`}>Music</Link>\r\n        <Link to={`/settings`}>Settings</Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { InputField } from '../common/FormFields/FormFields';\r\nimport { required } from '../../utils/validators/validators';\r\nimport css from './LoginForm.module.css';\r\n\r\nconst LoginForm = (props) => {\r\n  const { handleSubmit, error } =  props;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field name=\"email\" placeholder=\"Email\" component={InputField} validate={[required]}/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"password\" placeholder=\"Password\" component={InputField} validate={[required]}/>\r\n      </div>\r\n      {error && <div className={css.loginError}>\r\n        Incorrect email or password\r\n      </div>}\r\n      <div>\r\n        <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n      </div>\r\n      <div>\r\n        <button>Log in</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'login'\r\n})(LoginForm);\r\n","import React from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n  const { login, isAuth } = props;\r\n\r\n  const onSubmit = (formData) => {\r\n    login(formData.email, formData.password, formData.rememberMe);\r\n  };\r\n\r\n  if(isAuth) {\r\n    return <Redirect to={`/profile`} />;\r\n  }\r\n\r\n  return (\r\n    <LoginForm onSubmit={onSubmit} />\r\n  );\r\n};\r\n\r\nexport default Login;","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_USER_DATA = 'gotham-social/auth/SET_USER_DATA';\r\n\r\nconst initialState = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isFetching: false,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (payload) => ({\r\n  type: SET_USER_DATA,\r\n  payload\r\n});\r\n\r\nexport const getAuthUserData = () => {\r\n  return (dispatch) => {\r\n    return authAPI.getAuthUserData().then(response => {\r\n      if (response.resultCode === 0) {\r\n        dispatch(setAuthUserData({ ...response.data, isAuth: true }));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const login = (email, password, remember) => {\r\n  return async (dispatch) => {\r\n    const response = await authAPI.login(email, password, remember);\r\n    switch (response.resultCode) {\r\n      case 0:\r\n        dispatch(getAuthUserData());\r\n        break;\r\n      case 1:\r\n        dispatch(stopSubmit('login', {\r\n          _error: response.messages[0],\r\n        }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n    const response = await authAPI.logout();\r\n    if (response.resultCode === 0) {\r\n      dispatch(setAuthUserData({ id: null, login: null, password: null, email: null, isAuth: false }));\r\n    }\r\n  };\r\n};\r\nexport default authReducer;","import Login from './Login';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport LoginContainer from '../Login/LoginContainer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nconst DialogsContainer = React.lazy(() => import('../DialogsPage/DialogsContainer'));\r\nconst ProfilePageContainer = React.lazy(() => import('../ProfilePage/ProfilePageContainer'));\r\nconst UsersPageContainer = React.lazy(() => import('../UsersPage/UsersPageContainer'));\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className=\"content\">\r\n      <Suspense fallback={Preloader}>\r\n        <Route path={`/profile/:userId?`} render={() => <ProfilePageContainer />} />\r\n        <Route path={`/dialogs`} render={() => <DialogsContainer />} />\r\n        <Route path={`/users`} render={() => <UsersPageContainer />} />\r\n        <Route path={`/login`} render={() => <LoginContainer />} />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Content);","import React from 'react';\r\nimport logo from '../../assets/images/logo.png';\r\nimport css from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const { isAuth, login, logout } = props;\r\n\r\n  const handleLogoutClick = () => {\r\n    logout();\r\n  }\r\n\r\n  return (\r\n    <header className={`header ${css.header}`}>\r\n      <div className={css.logo}>\r\n        <img src={logo} alt=\"logo\" className={css.logoImage} />\r\n      </div>\r\n      <div className={css.userMenu}>\r\n        {\r\n          isAuth ?\r\n            <div>\r\n              <div>{login}</div>\r\n              <div>\r\n                <button onClick={handleLogoutClick}>Logout</button>\r\n              </div>\r\n            </div> :\r\n            <NavLink className={css.loginLink} to=\"/login\">Login</NavLink>\r\n        }\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { logout } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header {...this.props}/>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { isAuth, login } = state.auth;\r\n  return {\r\n    isAuth,\r\n    login\r\n  };\r\n};\r\n\r\nconst mapDispatchToPropsObj = {\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToPropsObj)(HeaderContainer);","import { getAuthUserData } from './auth-reducer';\r\n\r\nconst INITIALIZING_SUCCES = 'INITIALIZING_SUCCES';\r\n\r\nconst initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZING_SUCCES:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializingSucces = () => ({\r\n  type: INITIALIZING_SUCCES,\r\n});\r\n\r\nexport const initializeApp = () => {\r\n  return (dispatch) => {\r\n    const getUserData = dispatch(getAuthUserData());\r\n    Promise.all([getUserData]).then(() => {\r\n      dispatch(initializingSucces());\r\n    });\r\n  };\r\n};\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Content from './components/Content/Content';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport { connect } from 'react-redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    const { initializeApp } = this.props;\r\n    initializeApp();\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.initialized) {\r\n      return <Preloader />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <Content />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    initialized: state.app.initialized\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nconst reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  users: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ww3b\",\"logo\":\"Header_logo__2ENmT\",\"logoImage\":\"Header_logoImage__1xqwI\",\"userMenu\":\"Header_userMenu__1V_Hs\",\"loginLink\":\"Header_loginLink__1ifZs\"};","import React from 'react';\r\nimport spinner from '../../../assets/images/Eclipse.svg';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div>\r\n      <img src={spinner} alt=\"preloader\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport css from './FormFields.module.css';\r\n\r\nconst fieldControl = (element, props) => {\r\n  const { input, meta, ...restProps } = props;\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  restProps.className = hasError && css.error ? css.error : '';\r\n  const FieldElement = element({...input, ...restProps});\r\n\r\n  return (\r\n    <div>\r\n      {FieldElement}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextareaField = (props) => {\r\n  const textarea = (props) => <textarea {...props}/>;\r\n  return fieldControl(textarea, props);\r\n};\r\n\r\nexport const InputField = (props) => {\r\n  const input = (props) => <input {...props}/>;\r\n  return fieldControl(input, props);\r\n};","export const required = (value) => {\r\n  if(!value) {\r\n    return 'Field is requeired';\r\n  }\r\n\r\n  return undefined;\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if(value && value.length > maxLength) {\r\n    return `Max length is ${maxLength} symbols`;\r\n  }\r\n\r\n  return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormFields_error__fUAJH\"};","import { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nconst initialState = {\r\n  posts: [\r\n    {\r\n      id: 1,\r\n      text: 'Hello world',\r\n      likes: 15\r\n    },\r\n    {\r\n      id: 2,\r\n      text: 'What\\'s up?',\r\n      likes: 10\r\n    }\r\n  ],\r\n  profile: null,\r\n  newPostText: '',\r\n  status: ''\r\n};\r\n\r\nexport const addPost = (text) => ({\r\n  type: ADD_POST,\r\n  text\r\n});\r\n\r\nexport const deletePost = (postId) => ({\r\n  type: DELETE_POST,\r\n  postId\r\n});\r\n\r\nexport const setUserProfile = (profile) => ({\r\n  type: SET_USER_PROFILE,\r\n  profile\r\n});\r\n\r\nexport const setStatus = (status) => ({\r\n  type: SET_STATUS,\r\n  status\r\n});\r\n\r\nexport const getUserProfile = (userId) => {\r\n  return async (dispatch) => {\r\n    const profile = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(profile));\r\n  };\r\n};\r\n\r\nexport const getStatus = (userId) => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n  };\r\n};\r\n\r\nexport const updateStatus = (status) => {\r\n  return async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if(response.data.resultCode === 0) {\r\n      dispatch(setStatus(status));\r\n    }\r\n  };\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      const post = {\r\n        id: state.posts.length + 1,\r\n        text: action.text,\r\n        likes: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, post],\r\n      };\r\n    }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post.id !== action.postId)\r\n      };\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    case SET_STATUS: {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}